{"version":3,"sources":["components/experience.js","components/separator.js","components/resume.js","App.js","serviceWorker.js","index.js","JA_Logo.svg"],"names":["Experience","text","bullet","console","log","this","props","info","push","react_default","a","createElement","className","title","company","date","bullets","React","Component","Separator","react_plx_lib_default","parallaxData","start","duration","easing","startOffset","properties","startValue","endValue","property","Resume","experience","separator","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","scrollPane","createRef","state","width","height","margin","updateWindowDimensions","bind","assertThisInitialized","direction","cjs","Fade_default","styles","bannerContainer","bannerBg","layers","image","amount","style","src","Logo","alt","fontSize","color","verticalAlign","slideyTitle","components_resume","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","display","fontWeight","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a3e6a000.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./resume.css\";\r\nclass Experience extends React.Component {\r\n  bullets() {\r\n    let text = [];\r\n    console.log(this.props.info);\r\n    for (let bullet in this.props.info) {\r\n      text.push(<li>{this.props.info[bullet]}</li>);\r\n    }\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"experience\">\r\n        <span>\r\n          <div className=\"jobTitle\">\r\n            <h2>{this.props.title}</h2>\r\n            <span>\r\n              <h5 className=\"company\">{this.props.company} </h5>\r\n              <h6 className=\"date\">\r\n                <i>{this.props.date}</i>\r\n              </h6>\r\n            </span>\r\n          </div>\r\n          <div className=\"work\">{this.bullets()}</div>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport Plx from \"react-plx\";\r\nclass Separator extends React.Component {\r\n  render() {\r\n    return (\r\n      <Plx\r\n        className=\"separate\"\r\n        parallaxData={[\r\n          {\r\n            start: \"self\",\r\n            duration: \"15%\",\r\n            easing: \"ease\",\r\n            startOffset: \"10%\",\r\n            properties: [\r\n              {\r\n                startValue: 0,\r\n                endValue: 1,\r\n                property: \"scaleX\"\r\n              }\r\n            ]\r\n          }\r\n        ]}\r\n      >\r\n        <hr className=\"separate\" />\r\n      </Plx>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Separator;\r\n","import React from \"react\";\r\nimport \"./resume.css\";\r\nimport Experience from \"./experience.js\";\r\nimport Separator from \"./separator.js\";\r\nclass Resume extends React.Component {\r\n  render() {\r\n    const leidosInfo = [\r\n      \"Coded and tested a variety of machine learning algorithms for large scale data clarification\",\r\n      \"Utilized Python’s Flask to make a web UI and Whoosh Alchemy to manage a PostgreSQL database to handle large streams of continually flowing data.\",\r\n      \"Using AlanNLP trained on the SQUAD dataset to develop a natural language procesing conversational UX for Leidos employees and customers to easily converse with and get their questions answered more easily.\"\r\n    ];\r\n\r\n    const solsticeInfo = [\r\n      \"Created a neural network capable of reading the American Sign Language alphabet using cutting edge Single Shot Detection via Tensorflow, working under a Scrum Agile Methodology; project was demoed at Google’s Cloud Next conference\",\r\n      \"Developed a V0.1 version of a website to host the technology for anyone to interact with it using React.js\"\r\n    ];\r\n\r\n    const wmucInfo = [\r\n      \"Created and maintain an app for listening to the school’s radio station with plans to expand to a database for all local shows\",\r\n      \"Managed a team of 4 developers using an agile development framework\"\r\n    ];\r\n\r\n    return (\r\n      <div className=\"experiences\">\r\n        <Experience\r\n          title=\"Software Engineer\"\r\n          company=\"Leidos\"\r\n          info={leidosInfo}\r\n          date=\"(June 2017 - Present)\"\r\n        />\r\n        <Separator />\r\n\r\n        <Experience\r\n          title=\"Software Engineering Intern\"\r\n          company=\"Solstice Consulting\"\r\n          info={solsticeInfo}\r\n          date=\"(June 2018 - August 2018)\"\r\n        />\r\n        <Separator />\r\n\r\n        <Experience\r\n          title=\"Android Developer\"\r\n          company=\"WMUC\"\r\n          info={wmucInfo}\r\n          date=\"(November 2016 – May 2017)\"\r\n        />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Typing from \"react-typing-animation\";\nimport { CSSTransitionGroup } from \"react-transition-group\"; // ES6\nimport Fade from \"react-reveal/Fade\";\nimport ScrollableAnchor from \"react-scrollable-anchor\";\nimport { ParallaxProvider, ParallaxBanner } from \"react-scroll-parallax\";\nimport Logo from \"./JA_Logo.svg\";\nimport styles from \"./ParallaxBanner.scss\";\nimport Plx from \"react-plx\";\nimport Resume from \"./components/resume.js\";\nimport Separator from \"./components/separator.js\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scrollPane = React.createRef();\n    this.state = { width: 0, height: 0, margin: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  render() {\n    const layers = [\n      {\n        image: \"http://i66.tinypic.com/2dhwqvp.png\",\n        amount: 0.6\n      },\n      {\n        image: \"http://i67.tinypic.com/23thzye.png\",\n        amount: 0.5\n      },\n      {\n        image: \"http://i64.tinypic.com/2m3s8lh.png\",\n        amount: 0.3\n      },\n      {\n        image: \"http://i65.tinypic.com/2eb7mdu.png\",\n        amount: 0.2\n      }\n    ];\n    let direction;\n    if (this.state.width > this.state.height) {\n      direction = \"w\";\n    } else {\n      direction = \"h\";\n    }\n    return (\n      <ParallaxProvider>\n        <div className=\"App  ms-Fabric\">\n          <Fade>\n            <div className={styles.bannerContainer}>\n              <ParallaxBanner\n                className={styles.bannerBg}\n                layers={layers}\n                style={{ height: \"100vh\" }}\n              >\n                <span className=\"parallaxChildren ms-font-su\">\n                  <img\n                    src={Logo}\n                    alt={Logo}\n                    style={{ height: \"25v\" + direction }}\n                  />\n                  <h1\n                    style={{\n                      fontSize: \"7v\" + direction,\n                      color: \"black\"\n                    }}\n                  >\n                    Joseph Antony\n                  </h1>\n                </span>\n              </ParallaxBanner>\n            </div>\n          </Fade>\n          <div className=\"resume\">\n            <div style={{ verticalAlign: \"middle\" }}>{this.slideyTitle()}</div>\n\n            <Separator />\n\n            <Fade>\n              <Resume />\n            </Fade>\n            <Separator />\n          </div>\n        </div>\n      </ParallaxProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  slideyTitle() {\n    let direction;\n    if (this.state.width > this.state.height) {\n      direction = \"w\";\n    } else {\n      direction = \"h\";\n    }\n    if (this.state.width > 600) {\n      return (\n        <div>\n          {\" \"}\n          <Plx\n            style={{\n              width: \"fit-content\",\n              display: \"inline-block\",\n              verticalAlign: \"middle\"\n            }}\n            parallaxData={[\n              {\n                start: \"self\",\n                duration: \"40%\",\n                easing: \"ease\",\n                startOffset: \"10%\",\n                properties: [\n                  {\n                    startValue: 0,\n                    endValue: -this.state.width + this.state.width * 0.95,\n                    property: \"translateX\"\n                  }\n                ]\n              }\n            ]}\n          >\n            <img\n              src={Logo}\n              alt={Logo}\n              style={{\n                height: \"20v\" + direction\n              }}\n            />\n          </Plx>\n          <Plx\n            style={{\n              width: \"fit-content\",\n              display: \"inline-block\",\n              verticalAlign: \"middle\"\n            }}\n            parallaxData={[\n              {\n                start: \"self\",\n                duration: \"40%\",\n                easing: \"ease\",\n                startOffset: \"10%\",\n                properties: [\n                  {\n                    startValue: 0,\n                    endValue: this.state.width - this.state.width * 0.95,\n                    property: \"translateX\"\n                  }\n                ]\n              }\n            ]}\n          >\n            <h1\n              style={{\n                fontSize: \"9v\" + direction,\n                fontWeight: \"lighter\",\n                color: \" #22a39f\"\n              }}\n            >\n              Experience\n            </h1>\n          </Plx>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Plx\n            className=\"slideyTitle\"\n            style={{\n              width: \"fit-content\",\n              display: \"inline-block\",\n              verticalAlign: \"middle\"\n            }}\n            parallaxData={[\n              {\n                start: \"self\",\n                duration: \"40%\",\n                easing: \"ease\",\n                startOffset: \"10%\",\n                properties: [\n                  {\n                    startValue: 0,\n                    endValue: 1,\n                    property: \"opacity\"\n                  }\n                ]\n              }\n            ]}\n          >\n            <img\n              src={Logo}\n              alt={Logo}\n              style={{\n                height: \"20v\" + direction\n              }}\n            />\n            <h1\n              style={{\n                fontSize: \"9v\" + direction,\n                fontWeight: \"lighter\",\n                color: \" #22a39f\"\n              }}\n            >\n              Experience\n            </h1>\n          </Plx>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/JA_Logo.6284c2a8.svg\";"],"sourceRoot":""}