{"version":3,"sources":["components/experience.js","components/resume.js","App.js","serviceWorker.js","index.js","JA_Logo.svg","images/bg.png","images/fg.png","images/m1.png","images/m2.png"],"names":["Experience","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","title","company","React","Component","Resume","experience","App","_this","scrollPane","createRef","state","width","height","margin","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","direction","layers","image","BG","amount","M2","M1","FG","cjs","Fade_default","styles","bannerContainer","bannerBg","style","src","Logo","alt","fontSize","color","verticalAlign","react_plx_lib_default","display","parallaxData","start","end","easing","properties","startValue","endValue","property","fontWeight","components_resume","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.09e38daf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./resume.css\";\r\nclass Experience extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"resumeTitle\">\r\n        <h2>{this.props.title}</h2>\r\n        <h5 className=\"company\">{this.props.company}</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","import React from \"react\";\r\nimport \"./resume.css\";\r\nimport Experience from \"./experience.js\"\r\nclass Resume extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"experiences\">\r\n      <Experience title=\"Software Engineer\" company=\"Leidos\"/>\r\n      <Experience title=\"Software Engineering Intern\" company=\"Solstice Consulting\"/>\r\n      <Experience title=\"Android Developer\" company=\"WMUC\"/>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Typing from \"react-typing-animation\";\nimport { CSSTransitionGroup } from \"react-transition-group\"; // ES6\nimport Fade from \"react-reveal/Fade\";\nimport ScrollableAnchor from \"react-scrollable-anchor\";\nimport { ParallaxProvider, ParallaxBanner } from \"react-scroll-parallax\";\nimport BG from \"./images/bg.png\";\nimport FG from \"./images/fg.png\";\nimport M1 from \"./images/m1.png\";\nimport M2 from \"./images/m2.png\";\nimport Logo from \"./JA_Logo.svg\";\nimport styles from \"./ParallaxBanner.scss\";\nimport Plx from \"react-plx\";\nimport Resume from \"./components/resume.js\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scrollPane = React.createRef();\n    this.state = { width: 0, height: 0, margin: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n  render() {\n    const layers = [\n      {\n        image: BG,\n        amount: 0.6\n      },\n      {\n        image: M2,\n        amount: 0.4\n      },\n      {\n        image: M1,\n        amount: 0.3\n      },\n      {\n        image: FG,\n        amount: 0.2\n      }\n    ];\n    let direction;\n    if (this.state.width > this.state.height) {\n      direction = \"w\";\n    } else {\n      direction = \"h\";\n    }\n    return (\n      <ParallaxProvider>\n        <div className=\"App  ms-Fabric\">\n          <Fade>\n            <div className={styles.bannerContainer}>\n              <ParallaxBanner\n                className={styles.bannerBg}\n                layers={layers}\n                style={{ height: \"100vh\" }}\n              >\n                <span className=\"parallaxChildren ms-font-su\">\n                  <img\n                    src={Logo}\n                    alt={Logo}\n                    style={{ height: \"25v\"+direction }}\n                  />\n                  <h1\n                    style={{\n                      fontSize: \"7v\"+direction,\n                      color: \"black\"\n                    }}\n                  >\n                    Joseph Antony\n                  </h1>\n                </span>\n              </ParallaxBanner>\n            </div>\n          </Fade>\n          <div className=\"resume\">\n            <Fade>\n              <div style={{ verticalAlign: \"middle\" }}>\n                <Plx\n                  style={{\n                    width: \"fit-content\",\n                    display: \"inline-block\",\n                    verticalAlign: \"middle\"\n                  }}\n                  parallaxData={[\n                    {\n                      start: 0.45 * this.state.height,\n                      end: 0.9 * this.state.height,\n                      easing: \"ease\",\n                      properties: [\n                        {\n                          startValue: 0,\n                          endValue: -this.state.width + this.state.width * 0.95,\n                          property: \"translateX\"\n                        }\n                      ]\n                    }\n                  ]}\n                >\n                  <img\n                    src={Logo}\n                    alt={Logo}\n                    style={{\n                      height:\n                        \"20v\"+direction\n                    }}\n                  />\n                </Plx>\n\n                <Plx\n                  style={{\n                    width: \"fit-content\",\n                    display: \"inline-block\",\n                    verticalAlign: \"middle\"\n                  }}\n                  parallaxData={[\n                    {\n                      start: 0.45 * this.state.height,\n                      end: 0.9 * this.state.height,\n                      easing: \"ease\",\n                      properties: [\n                        {\n                          startValue: 0,\n                          endValue: this.state.width - this.state.width * 0.95,\n                          property: \"translateX\"\n                        }\n                      ]\n                    }\n                  ]}\n                >\n                  <h1\n                    style={{\n                      fontSize: \"9v\"+direction,\n                      fontWeight: \"lighter\",\n                      color: \" #22a39f\"\n                    }}\n                  >\n                    Experience\n                  </h1>\n                </Plx>\n              </div>\n            </Fade>\n\n            <Plx\n              className=\"separate\"\n              parallaxData={[\n                {\n                  start: 0.55 * this.state.height,\n                  end: 0.9 * this.state.height,\n                  easing: \"ease\",\n                  properties: [\n                    {\n                      startValue: 0,\n                      endValue: 1,\n                      property: \"scaleX\"\n                    }\n                  ]\n                }\n              ]}\n            >\n              <hr className=\"separate\" />\n            </Plx>\n\n            <Fade>\n              <Resume />\n            </Fade>\n            <img src={Logo} alt={Logo} />\n          </div>\n        </div>\n      </ParallaxProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/JA_Logo.6284c2a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.29482003.png\";","module.exports = __webpack_public_path__ + \"static/media/fg.3f0d573a.png\";","module.exports = __webpack_public_path__ + \"static/media/m1.b2ae6ad5.png\";","module.exports = __webpack_public_path__ + \"static/media/m2.3f95c64a.png\";"],"sourceRoot":""}